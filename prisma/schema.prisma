generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model chi_tieu_tuyen_sinh {
  maNganh         String            @db.NVarChar(30)
  maDotTuyenSinh  Int
  chiTieu         Int?
  dot_tuyen_sinh  dot_tuyen_sinh    @relation(fields: [maDotTuyenSinh], references: [maDotTuyenSinh], onUpdate: NoAction, map: "FK_chi_tieu_tuyen_sinh_dot_tuyen_sinh")
  nganh           nganh             @relation(fields: [maNganh], references: [maNganh], onUpdate: NoAction, map: "FK_chi_tieu_tuyen_sinh_nganh")
  chi_tieu_to_hop chi_tieu_to_hop[]

  @@id([maNganh, maDotTuyenSinh], map: "PK_chi_tieu_tuyen_sinh")
}

model danh_sach_nguyen_vong {
  maKhoaTuyenSinh   Int?
  soBaoDanh         String             @db.NVarChar(30)
  maDotTuyenSinh    Int
  nguyenVong        Int
  maNganh           String             @db.NVarChar(30)
  maToHopXetTuyen   String             @db.NVarChar(10)
  diemMon1          Float?
  diemMon2          Float?
  diemMon3          Float?
  tongDiem          Float?
  dot_tuyen_sinh    dot_tuyen_sinh     @relation(fields: [maDotTuyenSinh], references: [maDotTuyenSinh], onUpdate: NoAction, map: "FK_danh_sach_nguyen_vong_dot_tuyen_sinh")
  nganh             nganh              @relation(fields: [maNganh], references: [maNganh], onUpdate: NoAction, map: "FK_danh_sach_nguyen_vong_nganh")
  thong_tin_ca_nhan thong_tin_ca_nhan? @relation(fields: [maKhoaTuyenSinh, soBaoDanh], references: [maKhoaTuyenSinh, soBaoDanh], onUpdate: NoAction, map: "FK_danh_sach_nguyen_vong_thong_tin_ca_nhan")
  to_hop_xet_tuyen  to_hop_xet_tuyen   @relation(fields: [maToHopXetTuyen], references: [maToHop], onUpdate: NoAction, map: "FK_danh_sach_nguyen_vong_to_hop_xet_tuyen")

  @@id([soBaoDanh, maDotTuyenSinh, nguyenVong], map: "PK_danh_sach_nguyen_vong")
}

model danh_sach_trung_tuyen {
  maKhoaTuyenSinh      Int
  soBaoDanh            String            @db.NVarChar(30)
  nguyenVongTrungTuyen Int?
  maDotTuyenSinh       Int
  dot_tuyen_sinh       dot_tuyen_sinh    @relation(fields: [maDotTuyenSinh], references: [maDotTuyenSinh], onUpdate: NoAction, map: "FK_danh_sach_trung_tuyen_dot_tuyen_sinh")
  khoa_tuyen_sinh      khoa_tuyen_sinh   @relation(fields: [maKhoaTuyenSinh], references: [maKhoa], onUpdate: NoAction, map: "FK_danh_sach_trung_tuyen_khoa_tuyen_sinh")
  thong_tin_ca_nhan    thong_tin_ca_nhan @relation(fields: [maKhoaTuyenSinh, soBaoDanh], references: [maKhoaTuyenSinh, soBaoDanh], onUpdate: NoAction, map: "FK_danh_sach_trung_tuyen_thong_tin_ca_nhan")

  @@id([maKhoaTuyenSinh, soBaoDanh], map: "PK_danh_sach_trung_tuyen")
  @@unique([maDotTuyenSinh, soBaoDanh], map: "UK_DSTT")
}

model dot_tuyen_sinh {
  maDotTuyenSinh        Int                     @id(map: "PK_dot_tuyen_sinh") @default(autoincrement())
  maKhoaTuyenSinh       Int?
  tenDotTuyenSinh       String?                 @db.NVarChar(100)
  lock                  Boolean?                @default(false, map: "DF_dot_tuyen_sinh_lock")
  khoa_tuyen_sinh       khoa_tuyen_sinh?        @relation(fields: [maKhoaTuyenSinh], references: [maKhoa], onDelete: NoAction, onUpdate: NoAction, map: "FK_dot_tuyen_sinh_khoa_tuyen_sinh")
  chi_tieu_tuyen_sinh   chi_tieu_tuyen_sinh[]
  danh_sach_nguyen_vong danh_sach_nguyen_vong[]
  danh_sach_trung_tuyen danh_sach_trung_tuyen[]

  @@unique([maKhoaTuyenSinh, maDotTuyenSinh], map: "IX_dot_tuyen_sinh")
}

model khoa_tuyen_sinh {
  maKhoa                Int                     @id(map: "PK_AcademicYear") @default(autoincrement())
  tenKhoa               String                  @db.NVarChar(50)
  danh_sach_trung_tuyen danh_sach_trung_tuyen[]
  dot_tuyen_sinh        dot_tuyen_sinh[]
  thong_tin_ca_nhan     thong_tin_ca_nhan[]
}

model nganh {
  maNganh               String                  @id(map: "PK_nganh") @db.NVarChar(30)
  tenNganh              String?                 @db.NVarChar(100)
  chi_tieu_tuyen_sinh   chi_tieu_tuyen_sinh[]
  danh_sach_nguyen_vong danh_sach_nguyen_vong[]
}

model profile {
  user_id   Int     @id(map: "PK_profile")
  firstname String? @db.NVarChar(20)
  lastname  String? @db.NVarChar(20)
  phone     String? @db.NChar(15)
  active    Boolean @default(true, map: "DF_profile_active")
  users     users   @relation(fields: [user_id], references: [id], onUpdate: NoAction, map: "FK_profile_user")
}

model role {
  id    Int     @id(map: "PK_role") @default(autoincrement())
  name  String? @db.NVarChar(30)
  users users[]
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B619A2C579C") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model to_hop_xet_tuyen {
  maToHop               String                  @id(map: "PK_to_hop_xet_tuyen") @db.NVarChar(10)
  mon1                  String?                 @db.NVarChar(20)
  mon2                  String?                 @db.NVarChar(20)
  mon3                  String?                 @db.NVarChar(20)
  danh_sach_nguyen_vong danh_sach_nguyen_vong[]

  @@unique([mon1, mon2, mon3], map: "UK_ToHopXetTuyen")
}

model users {
  id       Int      @id(map: "PK_user") @default(autoincrement())
  username String   @unique(map: "UX_user") @db.NVarChar(50)
  password String   @db.NVarChar(200)
  role_id  Int
  active   Boolean  @default(true, map: "DF_users_active")
  role     role     @relation(fields: [role_id], references: [id], onUpdate: NoAction, map: "FK_user_role")
  profile  profile?
}

model thong_tin_ca_nhan {
  maKhoaTuyenSinh       Int
  soBaoDanh             String                  @db.NVarChar(30)
  hoTen                 String?                 @db.NVarChar(50)
  cmnd                  String?                 @db.NVarChar(15)
  soDienThoai           String?                 @db.NVarChar(15)
  email                 String?                 @db.NVarChar(50)
  goiTinh               String?                 @db.NVarChar(10)
  diaChiGiayBao         String?                 @db.NVarChar(200)
  ngaySinh              String?                 @db.NVarChar(20)
  maTinh                String?                 @db.NVarChar(50)
  maTruong              String?                 @db.NVarChar(50)
  danToc                String?                 @db.NVarChar(20)
  khuVucUuTien          String?                 @db.NVarChar(20)
  khoa_tuyen_sinh       khoa_tuyen_sinh         @relation(fields: [maKhoaTuyenSinh], references: [maKhoa], onUpdate: NoAction, map: "FK_ThongTinCaNhan_khoa_tuyen_sinh")
  danh_sach_nguyen_vong danh_sach_nguyen_vong[]
  danh_sach_trung_tuyen danh_sach_trung_tuyen?

  @@id([maKhoaTuyenSinh, soBaoDanh], map: "PK_thong_tin_ca_nhan")
  @@unique([maKhoaTuyenSinh, soBaoDanh], map: "IX_thong_tin_ca_nhan")
}

model chi_tieu_to_hop {
  maDotTuyenSinh      Int
  maNganh             String              @db.NVarChar(30)
  maToHop             String              @db.NVarChar(10)
  chiTieu             Int?
  chi_tieu_tuyen_sinh chi_tieu_tuyen_sinh @relation(fields: [maNganh, maDotTuyenSinh], references: [maNganh, maDotTuyenSinh], onUpdate: NoAction, map: "FK_chi_tieu_to_hop_chi_tieu_tuyen_sinh")

  @@id([maDotTuyenSinh, maNganh, maToHop], map: "PK_chi_tieu_to_hop")
}
